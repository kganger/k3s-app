# Default values for java.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry:
  repository:
  tag: latest
  pullPolicy: IfNotPresent

imagePullCredentials:
  name: image-pull-secret
  registry:
  username:
  password:
  email:

nameOverride: ""
fullnameOverride: ""
readinessProbe:
  springBoot:
    enabled: false
    path: /acuate/health/readiness
  delay: 30
  period: 10
  failureThreshold: 30
  timoutSeconds: 10
livenessProbe:
  springBoot:
    enabled: false
    path: /acuate/health/liveness
  delay: 120
  period: 10
  failureThreshold: 5
  timoutSeconds: 10
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

persistence:
  enabled: false
  ## e data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteMany
  size: 10Gi
  annotations: {}
  storageClassName: glusterfs-storage
  mountPath: /data

  ephemeral:
    enabled: false
    mountPath: /scratch

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
route:
  enabled: false
  annotations: {}
  timeout: 120s
  hostname: example.local

serviceMesh:
  enabled: false
  hostname: example.local

service:
  type: ClusterIP
  port: 80
headlessService:
  enabled: false
  #name: provide a name
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


resources:
  limits:
    cpu: 2
    memory: 2Gi
  requests:
    cpu: 200m
    memory: 250Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

secretVolumes:
  enabled: false
  secretName:
  volumeName: "secretVolume"
  mountPath: "/secret"



# A map of environment variables to set
environment:
   JAVA_OPTS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
   JAVA_TOOL_OPTIONS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"

configmap: {}
secrets: {}
## if you are using spring boot you can use this to set an active profile for this deployment
activeProfiles:
addConfigToEnvironment: false


